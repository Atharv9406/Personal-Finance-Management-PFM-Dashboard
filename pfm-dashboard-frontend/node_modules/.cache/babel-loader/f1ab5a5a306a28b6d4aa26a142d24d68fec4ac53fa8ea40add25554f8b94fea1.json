{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesu\\\\OneDrive\\\\Desktop\\\\PFM Dashboard\\\\pfm-dashboard-frontend\\\\src\\\\components\\\\LinkBankButton.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { usePlaidLink } from 'react-plaid-link';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinkBankButton({\n  jwt\n}) {\n  _s();\n  const [linkToken, setLinkToken] = useState(null);\n  useEffect(() => {\n    (async () => {\n      const res = await fetch('/api/plaid/create_link_token', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${jwt}`\n        }\n      });\n      const data = await res.json();\n      setLinkToken(data.link_token);\n    })();\n  }, [jwt]);\n  const onSuccess = async public_token => {\n    await fetch('/api/plaid/set_access_token', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${jwt}`\n      },\n      body: JSON.stringify({\n        public_token\n      })\n    });\n    alert('Bank linked! Now fetch transactions.');\n  };\n  const {\n    open,\n    ready\n  } = usePlaidLink({\n    token: linkToken,\n    onSuccess\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: !ready,\n    onClick: () => open(),\n    children: ready ? 'Link Bank' : 'Preparing Link...'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(LinkBankButton, \"BYayuO+jSK5hQW2CbpjeaOR4Kuc=\", false, function () {\n  return [usePlaidLink];\n});\n_c = LinkBankButton;\nvar _c;\n$RefreshReg$(_c, \"LinkBankButton\");","map":{"version":3,"names":["useEffect","useState","usePlaidLink","jsxDEV","_jsxDEV","LinkBankButton","jwt","_s","linkToken","setLinkToken","res","fetch","method","headers","Authorization","data","json","link_token","onSuccess","public_token","body","JSON","stringify","alert","open","ready","token","disabled","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/thesu/OneDrive/Desktop/PFM Dashboard/pfm-dashboard-frontend/src/components/LinkBankButton.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { usePlaidLink } from 'react-plaid-link';\r\n\r\nexport default function LinkBankButton({ jwt }) {\r\n  const [linkToken, setLinkToken] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const res = await fetch('/api/plaid/create_link_token', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${jwt}` },\r\n      });\r\n      const data = await res.json();\r\n      setLinkToken(data.link_token);\r\n    })();\r\n  }, [jwt]);\r\n\r\n  const onSuccess = async (public_token) => {\r\n    await fetch('/api/plaid/set_access_token', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json', Authorization: `Bearer ${jwt}` },\r\n      body: JSON.stringify({ public_token }),\r\n    });\r\n    alert('Bank linked! Now fetch transactions.');\r\n  };\r\n\r\n  const { open, ready } = usePlaidLink({ token: linkToken, onSuccess });\r\n  return (\r\n    <button disabled={!ready} onClick={() => open()}>\r\n      {ready ? 'Link Bank' : 'Preparing Link...'}\r\n    </button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACd,CAAC,YAAY;MACX,MAAMU,GAAG,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACtDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE,kBAAkB;UAAEC,aAAa,EAAE,UAAUR,GAAG;QAAG;MAChF,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,CAAC;MAC7BP,YAAY,CAACM,IAAI,CAACE,UAAU,CAAC;IAC/B,CAAC,EAAE,CAAC;EACN,CAAC,EAAE,CAACX,GAAG,CAAC,CAAC;EAET,MAAMY,SAAS,GAAG,MAAOC,YAAY,IAAK;IACxC,MAAMR,KAAK,CAAC,6BAA6B,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE,kBAAkB;QAAEC,aAAa,EAAE,UAAUR,GAAG;MAAG,CAAC;MAC/Ec,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEH;MAAa,CAAC;IACvC,CAAC,CAAC;IACFI,KAAK,CAAC,sCAAsC,CAAC;EAC/C,CAAC;EAED,MAAM;IAAEC,IAAI;IAAEC;EAAM,CAAC,GAAGvB,YAAY,CAAC;IAAEwB,KAAK,EAAElB,SAAS;IAAEU;EAAU,CAAC,CAAC;EACrE,oBACEd,OAAA;IAAQuB,QAAQ,EAAE,CAACF,KAAM;IAACG,OAAO,EAAEA,CAAA,KAAMJ,IAAI,CAAC,CAAE;IAAAK,QAAA,EAC7CJ,KAAK,GAAG,WAAW,GAAG;EAAmB;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEb;AAAC1B,EAAA,CA7BuBF,cAAc;EAAA,QAuBZH,YAAY;AAAA;AAAAgC,EAAA,GAvBd7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}